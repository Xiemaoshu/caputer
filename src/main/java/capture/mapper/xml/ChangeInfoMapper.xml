<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="capture.mapper.ChangeInfoMapper">

    <sql id="changeInfoColumns">
        a.id AS "id",
		a.company_name AS "companyName",
		a.project_name AS "projectName",
		a.change_date AS "changeDate",
		a.before_info AS "beforeInfo",
		a.after_info AS "afterInfo"
    </sql>

    <sql id="changeInfoJoins">

    </sql>


    <select id="get" resultType="capture.entity.ChangeInfo">
        SELECT
        <include refid="changeInfoColumns"/>
        FROM cpms_change_info a
        <include refid="changeInfoJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="capture.entity.ChangeInfo">
        SELECT
        <include refid="changeInfoColumns"/>
        FROM cpms_change_info a
        <include refid="changeInfoJoins"/>
        <where>

            ${dataScope}
            <if test="companyName != null and companyName != ''">
                AND a.company_name = #{companyName}
            </if>
            <if test="projectName != null and projectName != ''">
                AND a.project_name = #{projectName}
            </if>
            <if test="changeDate != null and changeDate != ''">
                AND a.change_date = #{changeDate}
            </if>
            <if test="beforeInfo != null and beforeInfo != ''">
                AND a.before_info = #{beforeInfo}
            </if>
            <if test="afterInfo != null and afterInfo != ''">
                AND a.after_info = #{afterInfo}
            </if>
        </where>

    </select>

    <select id="findAllList" resultType="capture.entity.ChangeInfo">
        SELECT
        <include refid="changeInfoColumns"/>
        FROM cpms_change_info a
        <include refid="changeInfoJoins"/>
        <where>

            ${dataScope}
        </where>

    </select>

    <insert id="insert">
        INSERT INTO cpms_change_info(id,
                                     company_name,
                                     project_name,
                                     change_date,
                                     before_info,
                                     after_info)
        VALUES (#{id},
                #{companyName},
                #{projectName},
                #{changeDate},
                #{beforeInfo},
                #{afterInfo})
    </insert>

    <update id="update">
        UPDATE cpms_change_info
        SET project_name = #{projectName},
            change_date  = #{changeDate},
            before_info  = #{beforeInfo}
        WHERE id = #{id}
    </update>



    <update id="delete">
        DELETE
        FROM cpms_change_info
        WHERE id = #{id}
    </update>


    <update id="deleteByLogic">
        UPDATE cpms_change_info
        SET del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>



    <select id="findUniqueByProperty" resultType="capture.entity.ChangeInfo" statementType="STATEMENT">
        select *
        FROM cpms_change_info
        where ${propertyName} = '${value}'
    </select>

    <select id="getAllCount" resultType="java.lang.Integer">
        select COUNT(*)
        from cpms_change_info
    </select>
    <select id="getCountByCompany" resultType="java.lang.Integer">
        select COUNT(*)
        from cpms_change_info
        where company_name = #{company}
    </select>

    <select id="findListByName" resultType="capture.entity.ChangeInfo">
        SELECT
        <include refid="changeInfoColumns"/>
        FROM cpms_change_info a

        <where>
            a.company_name = #{companyName}

        </where>

    </select>

    <select id="getAllCompanyName" resultType="java.lang.String">
        select distinct company from cpms_customer
    </select>
    <insert id="insertByBatch" parameterType="java.util.List">
        insert into cpms_change_info (
        id,
        company_name,
        project_name,
        change_date,
        before_info,
        after_info
        )
        values
        <foreach collection="list" item="info" index="index" separator=",">
            (
            #{info.id},
            #{info.companyName},
            #{info.projectName},
            #{info.changeDate},
            #{info.beforeInfo},
            #{info.afterInfo}
            )
        </foreach>
    </insert>
    <delete id="deleteByCompany"  parameterType="java.lang.String">
        DELETE
        FROM cpms_change_info
        WHERE company_name = #{company}
    </delete>
</mapper>